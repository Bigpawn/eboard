/* * @Author: Bigpawn * @Date: 2018/7/16 11:43 * @Last Modified by: Bigpawn * @Last Modified time: 2018/7/16 11:43 */import * as React from 'react';import {SketchPicker} from 'react-color';import {OperationType} from "../enum/operationType";declare interface ColorPickerProps {    onChange?:any;    type?:string;    className?:string;    presetColors?:any;    defaultValue?:string;}declare interface ColorPickerState {    visibile:boolean;}class ColorPicker extends React.PureComponent<ColorPickerProps,ColorPickerState> {    constructor(props:any) {        super(props);        this.state = {            visibile:false        }    }    render() {        const {onChange,type,className,presetColors} = this.props;        return (            <div className={className}>                <i                    className={`eboard-icon eboard-screen-button-color-icon ${type===OperationType.颜色?'eboard-icon-font-color':type===OperationType.边框颜色?'eboard-icon-boder-color':'eboard-icon-fill-color'}`}                    style={{color:this.props.defaultValue}}                    title={type===OperationType.颜色?'颜色':type===OperationType.边框颜色?'边框颜色':'填充颜色'}                    onClick={()=>{                         this.setState({                             visibile:!this.state.visibile                         })                    }}                />                {                    this.state.visibile?<SketchPicker                        className="eboard-screen-button-color"                        color={this.props.defaultValue}                        presetColors={presetColors}                        onChange={(value:any,e:any)=>{                            onChange&&onChange(value.hex);                            this.setState({                                visibile:!this.state.visibile                            })                        }}                    />:null                }            </div>        )    }}export {ColorPicker}