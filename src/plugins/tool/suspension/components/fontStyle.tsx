/* * @Author: Bigpawn * @Date: 2018/7/16 14:43 * @Last Modified by: Bigpawn * @Last Modified time: 2018/7/16 14:43 */import * as React from 'react';import {fontFamily,fontSize} from "../enum/operationType";declare interface FontStyleProps {    onChange?:Function;    type?:string;    className?:string;}declare interface FontStyleState {}class FontStyle extends React.PureComponent<FontStyleProps,FontStyleState>{    constructor(props:any) {        super(props);    }    render() {        const {type,onChange,className} = this.props;        return (            <div className={className}>                <select                    onChange={(e:any)=>{                        let value = type==="fontSize"?parseInt(e.target.value):e.target.value;                        onChange&&onChange(value);                    }}                >                    {                        type==="fontSize"?fontSize.map((item:any,index:number)=>{                            return (                                <option value={item.value} key={index}>{item.type}</option>                            )                        }):fontFamily.map((item:any,index:number)=>{                            return (                                <option value={item.value} key={index}>{item.type}</option>                            )                        })                    }                </select>            </div>        )    }}export {FontStyle}