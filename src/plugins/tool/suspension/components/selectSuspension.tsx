/* * @Author: Bigpawn * @Date: 2018/7/16 14:43 * @Last Modified by: Bigpawn * @Last Modified time: 2018/7/16 14:43 */import * as React from 'react';import {fontFamily,fontSize,lineWidth,lineStyle} from "../enum/operationType";// import Select from 'react-select';// import 'react-select/dist/react-select.css';import Select,{ Option } from 'rc-select';import 'rc-select/assets/index.css';declare interface FontStyleProps {    onChange?:Function;    type?:string;    className?:string;    defaultValue?:any;}declare interface FontStyleState {    value:any;}class SelectSuspension extends React.PureComponent<FontStyleProps,FontStyleState>{    constructor(props:any) {        super(props);        this.state = {            value:''        }    }    componentWillMount() {        this.setState({            value:this.props.defaultValue        })    }    handleChange=(value:any)=>{        const {onChange} = this.props;        this.setState({value});        if(value.indexOf(',')>0) {            value = value.split(',')        }        onChange&&onChange(value);    };    valueRenderer=(valueOption:any)=>{        const {type} = this.props;        if(type==='fontSize'||type==="fontFamily") {            return valueOption.label        }else if(type==="lineWidth"){            let {value} = valueOption;            return (                <span className="eboard-screen-select-options" style={{height:`${value}px`}} />            )        }else {            let {label} = valueOption;            return (                <span className="eboard-screen-select-style" style={{borderTop:`4px ${label} #000000`}} />            )        }    };    render() {        const {type,className} = this.props;        return (            <div className={className}>                {/*<Select*/}                    {/*name="form-field-name"*/}                    {/*className={`eboard-screen-select-wrapper ${type==="fontSize"?'eboard-screen-select-wrapper-fontSize':''}`}*/}                    {/*clearable={false}*/}                    {/*value={this.state.selectedOption}*/}                    {/*onChange={this.handleChange}*/}                    {/*options={type==='fontSize'?fontSize:type==="fontFamily"?fontFamily:type==="lineWidth"?lineWidth:lineStyle}*/}                    {/*optionRenderer={this.handleRenderer}*/}                    {/*valueRenderer={this.valueRenderer}*/}                {/*/>*/}                <Select                    placeholder="jack"                    onChange={this.handleChange}                    className="eboard-screen-select-wrapper"                    value={this.state.value}                >                    {                        type==="fontSize"?fontSize.map((item:any)=>{                            return (                                <Option key={item.value}>{item.label}</Option>                            )                        }):type==="fontFamily"?fontFamily.map((item:any)=>{                            return (                               <Option key={item.value}>                                   <span style={{fontFamily:item.label}}>{item.label}</span>                               </Option>                            )                        }):type==="lineWidth"?lineWidth.map((item:any)=>{                            return (                                <Option key={item.value}>                                    <span className="eboard-screen-select-options" style={{height:`${item.value}px`}} />                                </Option>                            )                        }):lineStyle.map((item:any)=>{                            return (                                <Option key={item.value}>                                    <span className="eboard-screen-select-style" style={{borderTop:`2px ${item.label} #000000`}} />                                </Option>                            )                        })                    }                </Select>            </div>        )    }}export {SelectSuspension}