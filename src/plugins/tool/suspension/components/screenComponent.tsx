/* * @Author: Bigpawn * @Date: 2018/7/13 10:55 * @Last Modified by: Bigpawn * @Last Modified time: 2018/7/13 10:55 */import * as React from 'react';import '../../../../style/screencomponent.less';import {EBoardCanvas} from "../../../../EBoardCanvas";import {TypeProcess} from "../common/typeProcess";import {OperationType} from "../enum/operationType";declare interface ColorProps {    left?:number;    top?:number;    fabricObject?:any;    eBordCanvas?:EBoardCanvas;}class ScreenComponent extends React.PureComponent<ColorProps>{    constructor(props:ColorProps){        super(props);    }    public handleClick(type:OperationType) {        const typeProcess = new TypeProcess();        const objects = this.props.fabricObject && this.props.fabricObject._objects;        if(objects&&objects.length>0) {            objects.map((item:any,index:number)=>{                this.props.eBordCanvas && typeProcess.init(this.props.eBordCanvas,item,type,'yellow');            });        }else {            this.props.fabricObject&&this.props.eBordCanvas&&typeProcess.init(this.props.eBordCanvas,this.props.fabricObject,type,'pink');        }    }    render() {        const {left,top} = this.props;        return(            <div                className="eboard-screen-component-wapper"                style={{                    left:`${left}px`,                    top:`${top}px`                }}            >                <button onClick={this.handleClick.bind(this,OperationType.颜色)}>颜色</button>                <button onClick={this.handleClick.bind(this,OperationType.字体大小)}>字号</button>                <button onClick={this.handleClick.bind(this,OperationType.线型粗细)}>线型粗细</button>            </div>        )    }}export {ScreenComponent}